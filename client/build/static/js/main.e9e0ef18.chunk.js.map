{"version":3,"sources":["actions/authentication.js","reducers/userAuthentication.js","reducers/index.js","components/Header.js","containers/HeaderContainer.js","components/Login.js","containers/LoginContainer.js","components/Home.js","components/App.js","containers/Authenticate.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_COMPLETE","loginStatus","loginUser","credentials","dispatch","type","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","ok","json","user","validate","localStorage","setItem","token","username","msg","logout","removeItem","userAuthentication","state","arguments","length","undefined","getItem","action","Object","assign","errorMsg","currentUser","combineReducers","Header","props","react_default","a","createElement","isLoggedIn","className","onClick","connect","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","usernameInput","passwordInput","bind","assertThisInitialized","_this2","id","placeholder","value","onChange","e","setState","target","buttonClass","buttonText","Redirect","to","React","Component","_state$userAuthentica","status","componentState","password","Home","App","HeaderContainer","BrowserRouter","Switch","Route","path","component","LoginContainer","ProtectedComponent","Authenticate","_React$Component","apply","inherits","createClass","key","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e9e0ef18.chunk.js","sourcesContent":["// action types\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_COMPLETE = 'LOGOUT_COMPLETE';\n\nexport const loginStatus = {\n  LOGGED_IN: 'LOGGED_IN',\n  LOGGED_OUT: 'LOGGED_OUT',\n  IN_PROGRESS: 'IN_PROGRESS'\n}\n\n// action creators\nexport function loginUser(credentials) {\n  return dispatch => {\n    dispatch(requestLogin());\n    fetch('/find', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify(credentials)\n    }).then(response => {\n      if(response.ok) {\n        response.json().then(response => {\n          if(!response.validate) {\n            dispatch(loginFail('User authentication failed.'))\n          } else {\n            localStorage.setItem('idToken', response.token);\n            dispatch(loginSuccess(response.username));\n          }\n        })\n      }\n    })\n  }\n}\n\nexport function requestLogin() {\n  return {\n    type: LOGIN_REQUEST\n  };\n}\n\nexport function loginSuccess(user) {\n  return {\n    type: LOGIN_SUCCESS,\n    user\n  }\n}\n\nexport function loginFail(msg) {\n  return {\n    type: LOGIN_FAIL,\n    msg\n  }\n}\n\nexport function logout() {\n  return dispatch => {\n    localStorage.removeItem('idToken');\n    dispatch(logoutComplete());\n  }\n}\n\nexport function logoutComplete() {\n  return {\n    type: LOGOUT_COMPLETE\n  }\n}","import {loginStatus, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_REQUEST, LOGOUT_COMPLETE} from '../actions/authentication';\n\nconst userAuthentication = \n  (state = {loginStatus: localStorage.getItem('idToken') ? \n    loginStatus.LOGGED_IN: loginStatus.LOGGED_OUT}, action) => {\n      switch(action.type) {\n        case LOGIN_REQUEST:\n          return Object.assign({}, state, {\n            loginStatus: loginStatus.IN_PROGRESS,\n            errorMsg: '',\n            currentUser: null\n          });\n        case LOGIN_SUCCESS:\n          return Object.assign({}, state, {\n            loginStatus: loginStatus.LOGGED_IN,\n            errorMsg: '',\n            currentUser: action.user\n          })\n        case LOGIN_FAIL:\n          return Object.assign({}, state, {\n            loginStatus: loginStatus.LOGGED_OUT,\n            errorMsg: action.msg,\n            currentUser: null\n          })\n        case LOGOUT_REQUEST: \n          return Object.assign({}, state, {\n            loginStatus: loginStatus.IN_PROGRESS\n          })\n        case LOGOUT_COMPLETE:\n          return Object.assign({}, state, {\n            loginStatus: loginStatus.LOGGED_OUT,\n            errorMsg: '',\n            currentUser: null\n          })\n        default:\n          return state;\n      }\n}\n\nexport default userAuthentication;","import {combineReducers} from 'redux';\nimport userAuthentication from './userAuthentication';\n\nexport default combineReducers({\n  userAuthentication\n})","import React from 'react';\n\nconst Header = props => {\n  return (\n    <header>\n      {props.isLoggedIn && \n        <div>\n          {props.currentUser && \n            <span>Welcome, {props.currentUser}.  </span>}\n          <span className='button' onClick={() => props.logout()}>Logout</span>\n        </div>\n      }\n    </header>\n  )\n}\n\nexport default Header;","import {connect} from 'react-redux';\nimport Header from '../components/Header';\nimport {logout, loginStatus} from '../actions/authentication';\n\nconst mapStateToProps = state => {\n  const isLoggedIn = state.userAuthentication.loginStatus === loginStatus.LOGGED_IN;\n  if(isLoggedIn && state.userAuthentication.currentUser) {\n    return {\n      isLoggedIn,\n      currentUser: state.userAuthentication.currentUser\n    };\n  }\n  return {isLoggedIn};\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => {\n      dispatch(logout());\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {loginStatus} from '../actions/authentication';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernameInput: '', \n      passwordInput: ''\n    }\n    this.loginUser = this.props.loginUser.bind(this);\n  }\n  render() {\n    return (\n      <section id='login'>\n        <form>\n          <input type='text' placeholder='User Email' \n            value={this.state.usernameInput}\n            onChange={e => this.setState({usernameInput: e.target.value})}>\n          </input>\n          <input type='password' placeholder='Password' \n            value={this.state.passwordInput}\n            onChange={e => this.setState({passwordInput: e.target.value})}>\n          </input>\n          <div>\n            <span className='button' onClick={e => this.loginUser(this.state)}>\n              <span className={this.props.buttonClass}>{this.props.buttonText}</span>\n            </span>\n            <span className='button'>Create Account</span>\n          </div>\n        </form>\n        {this.props.loginStatus === loginStatus.LOGGED_IN &&\n          <Redirect to='/home' />\n        }\n        {this.props.errorMsg &&\n          <div className='msg'>{this.props.errorMsg}</div>\n        }\n      </section>\n    )\n  }\n}\n\nexport default Login;","import {connect} from 'react-redux';\nimport Login from '../components/Login';\nimport {loginUser, loginStatus as status} from '../actions/authentication';\n\nconst mapStateToProps = state => {\n  const {loginStatus, errorMsg} = state.userAuthentication;\n  const buttonText = loginStatus === status.IN_PROGRESS ? '◌' : 'Login';\n\n  return {\n    loginStatus,\n    errorMsg,\n    buttonText,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: (componentState) => {\n      if(componentState.usernameInput && componentState.passwordInput) {\n        dispatch(loginUser({\n          username: componentState.usernameInput, \n          password: componentState.passwordInput\n        }));\n      }\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);","import React from 'react';\n\nconst Home = (props) => {\n  return (\n    <div>This is the home page</div>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport HeaderContainer from '../containers/HeaderContainer';\nimport LoginContainer from '../containers/LoginContainer';\nimport Authenticate from '../containers/Authenticate';\nimport Home from '../components/Home';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <HeaderContainer />\n        <main>\n          <Router>\n            <Switch>\n              <Route path='/signin' component={LoginContainer} />\n              <Route path='/' component={Authenticate(Home)} />\n            </Switch>\n          </Router>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {loginStatus} from '../actions/authentication';\n\nexport default function(ProtectedComponent) {\n  class Authenticate extends React.Component {\n    render() {\n      return this.props.loginStatus === loginStatus.LOGGED_IN ?\n        <ProtectedComponent /> : <Redirect to='/signin' />;\n    }\n  }\n\n  const mapStateToProps = state => {\n    return {\n      loginStatus: state.userAuthentication.loginStatus\n    }\n  }\n\n  const mapDispatchToProps = dispatch => {\n    return {};\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(Authenticate);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport rootReducer from './reducers';\nimport App from './components/App';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}